{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\victo\\\\Desktop\\\\mern-community-app-copy\\\\client\\\\src\\\\pages\\\\home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useGetUserID } from \"../hooks/useGetUserID\";\nimport { useCookies } from \"react-cookie\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Home = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [savedPosts, setSavedPosts] = useState([]);\n  const userID = useGetUserID();\n  const [isLoggedIn, setIsLoggedIn] = useState(!!userID);\n  const [cookies] = useCookies(['access_token']);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const token = cookies.access_token;\n    setIsLoggedIn(!!userID);\n    if (!isLoggedIn && token) {\n      const autoLogin = async () => {\n        try {\n          const response = await axios.post('http://localhost:4000/auth/auto-login', {}, {\n            headers: {\n              'Authorization': `Bearer ${token}`\n            },\n            withCredentials: true\n          });\n          // Handle successful login here\n          window.sessionStorage.setItem(\"userID\", response.data.userID);\n          window.sessionStorage.setItem(\"userName\", response.data.username);\n          window.location.reload(true);\n        } catch (error) {\n          // Handle login error here\n        }\n      };\n      autoLogin();\n    }\n    const fetchPosts = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:4000/posts\");\n        const sortedPosts = response.data.sort((a, b) => b._id.localeCompare(a._id));\n        setPosts(sortedPosts);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    const fetchSavedPosts = async () => {\n      try {\n        const response = await axios.get(`http://localhost:4000/posts/savedPosts/ids/${userID}`);\n        setSavedPosts(response.data.savedPosts);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    fetchPosts();\n    if (isLoggedIn) {\n      fetchSavedPosts();\n    } else {\n      setSavedPosts([]);\n    }\n  }, [userID, isLoggedIn, cookies, navigate]);\n  const savePost = async postID => {\n    try {\n      const response = await axios.put(\"http://localhost:4000/posts\", {\n        postID,\n        userID\n      });\n      setSavedPosts(response.data.savedPosts);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  const sortPostsByTags = () => {\n    const sortedPosts = [...posts].sort((a, b) => {\n      // Convert tags to lowercase and join them into a string for comparison\n      const aTags = a.tags.map(tag => tag.toLowerCase()).join();\n      const bTags = b.tags.map(tag => tag.toLowerCase()).join();\n      return aTags.localeCompare(bTags);\n    });\n    setPosts(sortedPosts);\n    setSortedByTags(true);\n  };\n  const sortPostsById = () => {\n    const sortedPosts = [...posts].sort((a, b) => b._id.localeCompare(a._id));\n    setPosts(sortedPosts);\n    setSortedByTags(false);\n  };\n  const isPostSaved = id => savedPosts.includes(id);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mt-4\",\n      children: \"Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sortPostsByTags,\n      children: \"Sort Posts By Tags\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-unstyled\",\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"cardu\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body d-flex justify-content-between\\r\\nalign-items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"card-title\",\n              children: post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 1\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Posted by: \", post.userOwner.username]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 1\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 1\n          }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => savePost(post._id),\n            className: `btn ${isPostSaved(post._id) ? \"btn-success\" : \"btn-primary\"}`,\n            disabled: isPostSaved(post._id),\n            children: isPostSaved(post._id) ? \"Saved\" : \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: post.imageUrl,\n            alt: post.title,\n            className: \"img-fluid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"instructions\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: post.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 1\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tags\",\n            children: post.tags.map((tag, index) => /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"ingredient-list\",\n              children: /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"card-text\",\n                children: [\"#\", tag]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 1\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 1\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 1\n        }, this)]\n      }, post._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 1\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 1\n  }, this);\n};\n_s(Home, \"O1MziAVWA16+LGBm+LmzRJv1DNM=\", false, function () {\n  return [useGetUserID, useCookies, useNavigate];\n});\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","useGetUserID","useCookies","axios","useNavigate","jsxDEV","_jsxDEV","Home","_s","posts","setPosts","savedPosts","setSavedPosts","userID","isLoggedIn","setIsLoggedIn","cookies","navigate","token","access_token","autoLogin","response","post","headers","withCredentials","window","sessionStorage","setItem","data","username","location","reload","error","fetchPosts","get","sortedPosts","sort","a","b","_id","localeCompare","err","console","log","fetchSavedPosts","savePost","postID","put","sortPostsByTags","aTags","tags","map","tag","toLowerCase","join","bTags","setSortedByTags","sortPostsById","isPostSaved","id","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","title","userOwner","disabled","src","imageUrl","alt","content","index","_c","$RefreshReg$"],"sources":["C:/Users/victo/Desktop/mern-community-app-copy/client/src/pages/home.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useGetUserID } from \"../hooks/useGetUserID\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nexport const Home = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [savedPosts, setSavedPosts] = useState([]);\r\n  const userID = useGetUserID();\r\n  const [isLoggedIn,setIsLoggedIn] = useState(!!userID);\r\n  const [cookies] = useCookies(['access_token']);\r\n  const navigate = useNavigate();\r\n  useEffect(() => {\r\n    const token = cookies.access_token;\r\n  setIsLoggedIn(!!userID);\r\n  if (!isLoggedIn && token) {\r\n    const autoLogin = async () => {\r\n      try {\r\n        const response = await axios.post('http://localhost:4000/auth/auto-login', {}, {\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`\r\n          },\r\n          withCredentials: true\r\n        });\r\n        // Handle successful login here\r\n        window.sessionStorage.setItem(\"userID\", response.data.userID);\r\n        window.sessionStorage.setItem(\"userName\", response.data.username);\r\n        window.location.reload(true);\r\n      } catch (error) {\r\n        // Handle login error here\r\n      }\r\n    };\r\n    autoLogin();\r\n  }\r\nconst fetchPosts = async () => {\r\ntry {\r\nconst response = await axios.get(\"http://localhost:4000/posts\");\r\nconst sortedPosts = response.data.sort((a, b) => b._id.localeCompare(a._id));\r\nsetPosts(sortedPosts);\r\n} catch (err) {\r\nconsole.log(err);\r\n}\r\n};\r\n\r\nconst fetchSavedPosts = async () => {\r\ntry {\r\nconst response = await axios.get(\r\n`http://localhost:4000/posts/savedPosts/ids/${userID}`\r\n);\r\nsetSavedPosts(response.data.savedPosts);\r\n} catch (err) {\r\nconsole.log(err);\r\n}\r\n};\r\n\r\nfetchPosts();\r\nif (isLoggedIn) {\r\nfetchSavedPosts();\r\n} else {\r\nsetSavedPosts([]);\r\n}\r\n}, [userID, isLoggedIn,cookies,navigate]);\r\n\r\nconst savePost = async (postID) => {\r\ntry {\r\nconst response = await axios.put(\"http://localhost:4000/posts\", {\r\npostID,\r\nuserID,\r\n});\r\nsetSavedPosts(response.data.savedPosts);\r\n} catch (err) {\r\nconsole.log(err);\r\n}\r\n};\r\nconst sortPostsByTags = () => {\r\n    const sortedPosts = [...posts].sort((a, b) => {\r\n      // Convert tags to lowercase and join them into a string for comparison\r\n      const aTags = a.tags.map(tag => tag.toLowerCase()).join();\r\n      const bTags = b.tags.map(tag => tag.toLowerCase()).join();\r\n      return aTags.localeCompare(bTags);\r\n    });\r\n    setPosts(sortedPosts);\r\n    setSortedByTags(true);\r\n  };\r\n  \r\n  const sortPostsById = () => {\r\n    const sortedPosts = [...posts].sort((a, b) => b._id.localeCompare(a._id));\r\n    setPosts(sortedPosts);\r\n    setSortedByTags(false);\r\n  };\r\nconst isPostSaved = (id) => savedPosts.includes(id);\r\n\r\nreturn (\r\n<div className=\"home-container\">\r\n<h1 className=\"mt-4\">Posts</h1>\r\n<button onClick={sortPostsByTags}>Sort Posts By Tags</button>\r\n<ul className=\"list-unstyled\">\r\n{posts.map((post) => (\r\n<li key={post._id} className=\"cardu\">\r\n<div className=\"card-body d-flex justify-content-between\r\nalign-items-center\">\r\n<div>\r\n<h2 className=\"card-title\">{post.title}</h2>\r\n<p>Posted by: {post.userOwner.username}</p>\r\n</div>\r\n\r\n{isLoggedIn && (\r\n<button\r\nonClick={() => savePost(post._id)}\r\nclassName={`btn ${\r\nisPostSaved(post._id) ? \"btn-success\" : \"btn-primary\"\r\n}`}\r\ndisabled={isPostSaved(post._id)}\r\n>\r\n{isPostSaved(post._id) ? \"Saved\" : \"Save\"}\r\n</button>\r\n)}\r\n</div>\r\n<div className=\"card-body\">\r\n<img\r\nsrc={post.imageUrl}\r\nalt={post.title}\r\nclassName=\"img-fluid\"\r\n/>\r\n<div className=\"instructions\">\r\n<p className=\"card-text\">{post.content}</p>\r\n</div>\r\n<div className=\"tags\">\r\n{post.tags.map((tag, index) => (\r\n<ul key={index} className=\"ingredient-list\">\r\n<li className=\"card-text\">#{tag}</li>\r\n</ul>\r\n))}</div>\r\n</div>\r\n</li>\r\n))}\r\n</ul>\r\n</div>\r\n);\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,YAAY,QAAQ,uBAAuB;AACpD,SAASC,UAAU,QAAQ,cAAc;AACzC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC/C,OAAO,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAMa,MAAM,GAAGZ,YAAY,CAAC,CAAC;EAC7B,MAAM,CAACa,UAAU,EAACC,aAAa,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAACa,MAAM,CAAC;EACrD,MAAM,CAACG,OAAO,CAAC,GAAGd,UAAU,CAAC,CAAC,cAAc,CAAC,CAAC;EAC9C,MAAMe,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAC9BL,SAAS,CAAC,MAAM;IACd,MAAMmB,KAAK,GAAGF,OAAO,CAACG,YAAY;IACpCJ,aAAa,CAAC,CAAC,CAACF,MAAM,CAAC;IACvB,IAAI,CAACC,UAAU,IAAII,KAAK,EAAE;MACxB,MAAME,SAAS,GAAG,MAAAA,CAAA,KAAY;QAC5B,IAAI;UACF,MAAMC,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,IAAI,CAAC,uCAAuC,EAAE,CAAC,CAAC,EAAE;YAC7EC,OAAO,EAAE;cACP,eAAe,EAAG,UAASL,KAAM;YACnC,CAAC;YACDM,eAAe,EAAE;UACnB,CAAC,CAAC;UACF;UACAC,MAAM,CAACC,cAAc,CAACC,OAAO,CAAC,QAAQ,EAAEN,QAAQ,CAACO,IAAI,CAACf,MAAM,CAAC;UAC7DY,MAAM,CAACC,cAAc,CAACC,OAAO,CAAC,UAAU,EAAEN,QAAQ,CAACO,IAAI,CAACC,QAAQ,CAAC;UACjEJ,MAAM,CAACK,QAAQ,CAACC,MAAM,CAAC,IAAI,CAAC;QAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;UACd;QAAA;MAEJ,CAAC;MACDZ,SAAS,CAAC,CAAC;IACb;IACF,MAAMa,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACJ,MAAMZ,QAAQ,GAAG,MAAMlB,KAAK,CAAC+B,GAAG,CAAC,6BAA6B,CAAC;QAC/D,MAAMC,WAAW,GAAGd,QAAQ,CAACO,IAAI,CAACQ,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACC,GAAG,CAACC,aAAa,CAACH,CAAC,CAACE,GAAG,CAAC,CAAC;QAC5E7B,QAAQ,CAACyB,WAAW,CAAC;MACrB,CAAC,CAAC,OAAOM,GAAG,EAAE;QACdC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAChB;IACA,CAAC;IAED,MAAMG,eAAe,GAAG,MAAAA,CAAA,KAAY;MACpC,IAAI;QACJ,MAAMvB,QAAQ,GAAG,MAAMlB,KAAK,CAAC+B,GAAG,CAC/B,8CAA6CrB,MAAO,EACrD,CAAC;QACDD,aAAa,CAACS,QAAQ,CAACO,IAAI,CAACjB,UAAU,CAAC;MACvC,CAAC,CAAC,OAAO8B,GAAG,EAAE;QACdC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAChB;IACA,CAAC;IAEDR,UAAU,CAAC,CAAC;IACZ,IAAInB,UAAU,EAAE;MAChB8B,eAAe,CAAC,CAAC;IACjB,CAAC,MAAM;MACPhC,aAAa,CAAC,EAAE,CAAC;IACjB;EACA,CAAC,EAAE,CAACC,MAAM,EAAEC,UAAU,EAACE,OAAO,EAACC,QAAQ,CAAC,CAAC;EAEzC,MAAM4B,QAAQ,GAAG,MAAOC,MAAM,IAAK;IACnC,IAAI;MACJ,MAAMzB,QAAQ,GAAG,MAAMlB,KAAK,CAAC4C,GAAG,CAAC,6BAA6B,EAAE;QAChED,MAAM;QACNjC;MACA,CAAC,CAAC;MACFD,aAAa,CAACS,QAAQ,CAACO,IAAI,CAACjB,UAAU,CAAC;IACvC,CAAC,CAAC,OAAO8B,GAAG,EAAE;MACdC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAChB;EACA,CAAC;EACD,MAAMO,eAAe,GAAGA,CAAA,KAAM;IAC1B,MAAMb,WAAW,GAAG,CAAC,GAAG1B,KAAK,CAAC,CAAC2B,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;MAC5C;MACA,MAAMW,KAAK,GAAGZ,CAAC,CAACa,IAAI,CAACC,GAAG,CAACC,GAAG,IAAIA,GAAG,CAACC,WAAW,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC;MACzD,MAAMC,KAAK,GAAGjB,CAAC,CAACY,IAAI,CAACC,GAAG,CAACC,GAAG,IAAIA,GAAG,CAACC,WAAW,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC;MACzD,OAAOL,KAAK,CAACT,aAAa,CAACe,KAAK,CAAC;IACnC,CAAC,CAAC;IACF7C,QAAQ,CAACyB,WAAW,CAAC;IACrBqB,eAAe,CAAC,IAAI,CAAC;EACvB,CAAC;EAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1B,MAAMtB,WAAW,GAAG,CAAC,GAAG1B,KAAK,CAAC,CAAC2B,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACC,GAAG,CAACC,aAAa,CAACH,CAAC,CAACE,GAAG,CAAC,CAAC;IACzE7B,QAAQ,CAACyB,WAAW,CAAC;IACrBqB,eAAe,CAAC,KAAK,CAAC;EACxB,CAAC;EACH,MAAME,WAAW,GAAIC,EAAE,IAAKhD,UAAU,CAACiD,QAAQ,CAACD,EAAE,CAAC;EAEnD,oBACArD,OAAA;IAAKuD,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC/BxD,OAAA;MAAIuD,SAAS,EAAC,MAAM;MAAAC,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/B5D,OAAA;MAAQ6D,OAAO,EAAEnB,eAAgB;MAAAc,QAAA,EAAC;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC7D5D,OAAA;MAAIuD,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC5BrD,KAAK,CAAC0C,GAAG,CAAE7B,IAAI,iBAChBhB,OAAA;QAAmBuD,SAAS,EAAC,OAAO;QAAAC,QAAA,gBACpCxD,OAAA;UAAKuD,SAAS,EAAC,gEACI;UAAAC,QAAA,gBACnBxD,OAAA;YAAAwD,QAAA,gBACAxD,OAAA;cAAIuD,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAExC,IAAI,CAAC8C;YAAK;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC5C5D,OAAA;cAAAwD,QAAA,GAAG,aAAW,EAACxC,IAAI,CAAC+C,SAAS,CAACxC,QAAQ;YAAA;cAAAkC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtC,CAAC,EAELpD,UAAU,iBACXR,OAAA;YACA6D,OAAO,EAAEA,CAAA,KAAMtB,QAAQ,CAACvB,IAAI,CAACiB,GAAG,CAAE;YAClCsB,SAAS,EAAG,OACZH,WAAW,CAACpC,IAAI,CAACiB,GAAG,CAAC,GAAG,aAAa,GAAG,aACvC,EAAE;YACH+B,QAAQ,EAAEZ,WAAW,CAACpC,IAAI,CAACiB,GAAG,CAAE;YAAAuB,QAAA,EAE/BJ,WAAW,CAACpC,IAAI,CAACiB,GAAG,CAAC,GAAG,OAAO,GAAG;UAAM;YAAAwB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjC,CACP;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC,eACN5D,OAAA;UAAKuD,SAAS,EAAC,WAAW;UAAAC,QAAA,gBAC1BxD,OAAA;YACAiE,GAAG,EAAEjD,IAAI,CAACkD,QAAS;YACnBC,GAAG,EAAEnD,IAAI,CAAC8C,KAAM;YAChBP,SAAS,EAAC;UAAW;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpB,CAAC,eACF5D,OAAA;YAAKuD,SAAS,EAAC,cAAc;YAAAC,QAAA,eAC7BxD,OAAA;cAAGuD,SAAS,EAAC,WAAW;cAAAC,QAAA,EAAExC,IAAI,CAACoD;YAAO;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtC,CAAC,eACN5D,OAAA;YAAKuD,SAAS,EAAC,MAAM;YAAAC,QAAA,EACpBxC,IAAI,CAAC4B,IAAI,CAACC,GAAG,CAAC,CAACC,GAAG,EAAEuB,KAAK,kBAC1BrE,OAAA;cAAgBuD,SAAS,EAAC,iBAAiB;cAAAC,QAAA,eAC3CxD,OAAA;gBAAIuD,SAAS,EAAC,WAAW;gBAAAC,QAAA,GAAC,GAAC,EAACV,GAAG;cAAA;gBAAAW,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK;YAAC,GAD5BS,KAAK;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEV,CACH;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC;MAAA,GAnCG5C,IAAI,CAACiB,GAAG;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAoCb,CACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEN,CAAC;AAAA1D,EAAA,CAtIYD,IAAI;EAAA,QAGAN,YAAY,EAETC,UAAU,EACXE,WAAW;AAAA;AAAAwE,EAAA,GANjBrE,IAAI;AAAA,IAAAqE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}