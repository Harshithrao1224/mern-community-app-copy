{"ast":null,"code":"import indentString from 'indent-string';\nimport cleanStack from 'clean-stack';\nconst cleanInternalStack = stack => stack.replace(/\\s+at .*aggregate-error\\/index.js:\\d+:\\d+\\)?/g, '');\nexport default class AggregateError extends Error {\n  #errors;\n  name = 'AggregateError';\n  constructor(errors) {\n    if (!Array.isArray(errors)) {\n      throw new TypeError(`Expected input to be an Array, got ${typeof errors}`);\n    }\n    errors = errors.map(error => {\n      if (error instanceof Error) {\n        return error;\n      }\n      if (error !== null && typeof error === 'object') {\n        // Handle plain error objects with message property and/or possibly other metadata\n        return Object.assign(new Error(error.message), error);\n      }\n      return new Error(error);\n    });\n    let message = errors.map(error => {\n      // The `stack` property is not standardized, so we can't assume it exists\n      return typeof error.stack === 'string' && error.stack.length > 0 ? cleanInternalStack(cleanStack(error.stack)) : String(error);\n    }).join('\\n');\n    message = '\\n' + indentString(message, 4);\n    super(message);\n    this.#errors = errors;\n  }\n  get errors() {\n    return this.#errors.slice();\n  }\n}","map":{"version":3,"names":["indentString","cleanStack","cleanInternalStack","stack","replace","AggregateError","Error","errors","name","constructor","Array","isArray","TypeError","map","error","Object","assign","message","length","String","join","slice"],"sources":["C:/Users/victo/Desktop/mern-community-app-copy/client/node_modules/aggregate-error/index.js"],"sourcesContent":["import indentString from 'indent-string';\nimport cleanStack from 'clean-stack';\n\nconst cleanInternalStack = stack => stack.replace(/\\s+at .*aggregate-error\\/index.js:\\d+:\\d+\\)?/g, '');\n\nexport default class AggregateError extends Error {\n\t#errors;\n\n\tname = 'AggregateError';\n\n\tconstructor(errors) {\n\t\tif (!Array.isArray(errors)) {\n\t\t\tthrow new TypeError(`Expected input to be an Array, got ${typeof errors}`);\n\t\t}\n\n\t\terrors = errors.map(error => {\n\t\t\tif (error instanceof Error) {\n\t\t\t\treturn error;\n\t\t\t}\n\n\t\t\tif (error !== null && typeof error === 'object') {\n\t\t\t\t// Handle plain error objects with message property and/or possibly other metadata\n\t\t\t\treturn Object.assign(new Error(error.message), error);\n\t\t\t}\n\n\t\t\treturn new Error(error);\n\t\t});\n\n\t\tlet message = errors\n\t\t\t.map(error => {\n\t\t\t\t// The `stack` property is not standardized, so we can't assume it exists\n\t\t\t\treturn typeof error.stack === 'string' && error.stack.length > 0 ? cleanInternalStack(cleanStack(error.stack)) : String(error);\n\t\t\t})\n\t\t\t.join('\\n');\n\t\tmessage = '\\n' + indentString(message, 4);\n\t\tsuper(message);\n\n\t\tthis.#errors = errors;\n\t}\n\n\tget errors() {\n\t\treturn this.#errors.slice();\n\t}\n}\n"],"mappings":"AAAA,OAAOA,YAAY,MAAM,eAAe;AACxC,OAAOC,UAAU,MAAM,aAAa;AAEpC,MAAMC,kBAAkB,GAAGC,KAAK,IAAIA,KAAK,CAACC,OAAO,CAAC,+CAA+C,EAAE,EAAE,CAAC;AAEtG,eAAe,MAAMC,cAAc,SAASC,KAAK,CAAC;EACjD,CAACC,MAAM;EAEPC,IAAI,GAAG,gBAAgB;EAEvBC,WAAWA,CAACF,MAAM,EAAE;IACnB,IAAI,CAACG,KAAK,CAACC,OAAO,CAACJ,MAAM,CAAC,EAAE;MAC3B,MAAM,IAAIK,SAAS,CAAE,sCAAqC,OAAOL,MAAO,EAAC,CAAC;IAC3E;IAEAA,MAAM,GAAGA,MAAM,CAACM,GAAG,CAACC,KAAK,IAAI;MAC5B,IAAIA,KAAK,YAAYR,KAAK,EAAE;QAC3B,OAAOQ,KAAK;MACb;MAEA,IAAIA,KAAK,KAAK,IAAI,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;QAChD;QACA,OAAOC,MAAM,CAACC,MAAM,CAAC,IAAIV,KAAK,CAACQ,KAAK,CAACG,OAAO,CAAC,EAAEH,KAAK,CAAC;MACtD;MAEA,OAAO,IAAIR,KAAK,CAACQ,KAAK,CAAC;IACxB,CAAC,CAAC;IAEF,IAAIG,OAAO,GAAGV,MAAM,CAClBM,GAAG,CAACC,KAAK,IAAI;MACb;MACA,OAAO,OAAOA,KAAK,CAACX,KAAK,KAAK,QAAQ,IAAIW,KAAK,CAACX,KAAK,CAACe,MAAM,GAAG,CAAC,GAAGhB,kBAAkB,CAACD,UAAU,CAACa,KAAK,CAACX,KAAK,CAAC,CAAC,GAAGgB,MAAM,CAACL,KAAK,CAAC;IAC/H,CAAC,CAAC,CACDM,IAAI,CAAC,IAAI,CAAC;IACZH,OAAO,GAAG,IAAI,GAAGjB,YAAY,CAACiB,OAAO,EAAE,CAAC,CAAC;IACzC,KAAK,CAACA,OAAO,CAAC;IAEd,IAAI,CAAC,CAACV,MAAM,GAAGA,MAAM;EACtB;EAEA,IAAIA,MAAMA,CAAA,EAAG;IACZ,OAAO,IAAI,CAAC,CAACA,MAAM,CAACc,KAAK,CAAC,CAAC;EAC5B;AACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}