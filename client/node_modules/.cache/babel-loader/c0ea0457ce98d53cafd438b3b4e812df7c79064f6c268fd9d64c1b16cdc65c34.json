{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\victo\\\\Desktop\\\\mern-community-app-copy\\\\client\\\\src\\\\pages\\\\home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useGetUserID } from \"../hooks/useGetUserID\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Home = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [savedPosts, setSavedPosts] = useState([]);\n  const userID = useGetUserID();\n  const isLoggedIn = !!userID;\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:4000/posts\");\n        setPosts(response.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    const fetchSavedPosts = async () => {\n      try {\n        const response = await axios.get(`http://localhost:4000/posts/savedPosts/ids/${userID}`);\n        setSavedPosts(response.data.savedPosts);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    fetchPosts();\n    if (isLoggedIn) {\n      fetchSavedPosts();\n    } else {\n      setSavedPosts([]);\n    }\n  }, [userID, isLoggedIn]);\n  app.get('/search', async (req, res) => {\n    const {\n      query\n    } = req.query;\n    try {\n      let videos;\n      if (query) {\n        // Use a regular expression to match substrings of the name or description\n        const regex = new RegExp(query, 'i'); // 'i' flag for case-insensitive matching\n        videos = await Video.find({\n          $or: [{\n            name: {\n              $regex: regex\n            }\n          }, {\n            description: {\n              $regex: regex\n            }\n          }]\n        });\n      } else {\n        // If the query is empty, fetch all videos\n        videos = await Video.find();\n      }\n\n      // Respond with the list of matching videos\n      res.json(videos);\n    } catch (error) {\n      console.error('Error searching for videos:', error);\n      res.status(500).json({\n        error: 'Internal Server Error'\n      });\n    }\n  });\n  const savePost = async postID => {\n    try {\n      const response = await axios.put(\"http://localhost:4000/posts\", {\n        postID,\n        userID\n      });\n      setSavedPosts(response.data.savedPosts);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  const isPostSaved = id => savedPosts.includes(id);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mt-4\",\n      children: \"Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-unstyled\",\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"card mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body d-flex justify-content-between align-items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"card-title\",\n              children: post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => savePost(post._id),\n            className: `btn ${isPostSaved(post._id) ? \"btn-success\" : \"btn-primary\"}`,\n            disabled: isPostSaved(post._id),\n            children: isPostSaved(post._id) ? \"Saved\" : \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"instructions\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: post.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Tags\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this), post.tags.map((tag, index) => /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"ingredient-list\",\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"card-text\",\n              children: tag\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: post.imageUrl,\n            alt: post.title,\n            className: \"img-fluid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)]\n      }, post._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"RacLfIbsK2xusw1WbIJ2kw+x17w=\", false, function () {\n  return [useGetUserID];\n});\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","useGetUserID","axios","jsxDEV","_jsxDEV","Home","_s","posts","setPosts","savedPosts","setSavedPosts","userID","isLoggedIn","fetchPosts","response","get","data","err","console","log","fetchSavedPosts","app","req","res","query","videos","regex","RegExp","Video","find","$or","name","$regex","description","json","error","status","savePost","postID","put","isPostSaved","id","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","post","title","onClick","_id","disabled","content","tags","tag","index","src","imageUrl","alt","_c","$RefreshReg$"],"sources":["C:/Users/victo/Desktop/mern-community-app-copy/client/src/pages/home.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useGetUserID } from \"../hooks/useGetUserID\";\r\nimport axios from \"axios\";\r\nexport const Home = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [savedPosts, setSavedPosts] = useState([]);\r\n  const userID = useGetUserID();\r\n  const isLoggedIn = !!userID;\r\n\r\n  useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:4000/posts\");\r\n        setPosts(response.data);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n\r\n    const fetchSavedPosts = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `http://localhost:4000/posts/savedPosts/ids/${userID}`\r\n        );\r\n        setSavedPosts(response.data.savedPosts);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n\r\n    fetchPosts();\r\n    if (isLoggedIn) {\r\n      fetchSavedPosts();\r\n    } else {\r\n      setSavedPosts([]);\r\n    }\r\n  }, [userID, isLoggedIn]);\r\n  app.get('/search', async (req, res) => {\r\n    const { query } = req.query;\r\n  \r\n    try {\r\n      let videos;\r\n  \r\n      if (query) {\r\n        // Use a regular expression to match substrings of the name or description\r\n        const regex = new RegExp(query, 'i'); // 'i' flag for case-insensitive matching\r\n        videos = await Video.find({\r\n          $or: [\r\n            { name: { $regex: regex } },\r\n            { description: { $regex: regex } },\r\n          ],\r\n        });\r\n      } else {\r\n        // If the query is empty, fetch all videos\r\n        videos = await Video.find();\r\n      }\r\n  \r\n      // Respond with the list of matching videos\r\n      res.json(videos);\r\n    } catch (error) {\r\n      console.error('Error searching for videos:', error);\r\n      res.status(500).json({ error: 'Internal Server Error' });\r\n    }\r\n  });\r\n  \r\n\r\n  const savePost = async (postID) => {\r\n    try {\r\n      const response = await axios.put(\"http://localhost:4000/posts\", {\r\n        postID,\r\n        userID,\r\n      });\r\n      setSavedPosts(response.data.savedPosts);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const isPostSaved = (id) => savedPosts.includes(id);\r\n\r\n  return (\r\n    <div className=\"home-container\">\r\n      <h1 className=\"mt-4\">Posts</h1>\r\n      <ul className=\"list-unstyled\">\r\n        {posts.map((post) => (\r\n          <li key={post._id} className=\"card mb-4\">\r\n            <div className=\"card-body d-flex justify-content-between align-items-center\">\r\n              <div>\r\n                <h2 className=\"card-title\">{post.title}</h2>\r\n              </div>\r\n              {isLoggedIn && (\r\n                <button\r\n                  onClick={() => savePost(post._id)}\r\n                  className={`btn ${\r\n                    isPostSaved(post._id) ? \"btn-success\" : \"btn-primary\"\r\n                  }`}\r\n                  disabled={isPostSaved(post._id)}\r\n                >\r\n                  {isPostSaved(post._id) ? \"Saved\" : \"Save\"}\r\n                </button>\r\n              )}\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <div className=\"instructions\">\r\n                <p className=\"card-text\">{post.content}</p>\r\n              </div>\r\n              <h5>Tags</h5>\r\n              {post.tags.map((tag, index) => (\r\n                <ul key={index} className=\"ingredient-list\">\r\n                  <li className=\"card-text\">{tag}</li>\r\n                </ul>\r\n              ))}\r\n              <img\r\n                src={post.imageUrl}\r\n                alt={post.title}\r\n                className=\"img-fluid\"\r\n              />\r\n              \r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}