{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\victo\\\\Desktop\\\\mern-community-app-copy\\\\client\\\\src\\\\pages\\\\home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useGetUserID } from \"../hooks/useGetUserID\";\nimport { useCookies } from \"react-cookie\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Home = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [savedPosts, setSavedPosts] = useState([]);\n  const userID = useGetUserID();\n  const isLoggedIn = !!userID;\n  const [cookies] = useCookies(['access_token']);\n  useEffect(() => {\n    const token = cookies.access_token;\n    if (token && !isLoggedIn) {\n      axios.post('http://localhost:4000/auth/auto-login', {}, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      }).then(response => {\n        // Handle successful login here\n        window.sessionStorage.setItem(\"userID\", response.data.userID);\n        window.sessionStorage.setItem(\"userName\", response.data.username);\n      }).catch(error => {\n        // Handle login error here\n      });\n    }\n    const fetchPosts = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:4000/posts\");\n        setPosts(response.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    const fetchSavedPosts = async () => {\n      try {\n        const response = await axios.get(`http://localhost:4000/posts/savedPosts/ids/${userID}`);\n        setSavedPosts(response.data.savedPosts);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    fetchPosts();\n    if (isLoggedIn) {\n      fetchSavedPosts();\n    } else {\n      setSavedPosts([]);\n    }\n  }, [userID, isLoggedIn, cookies]);\n  const savePost = async postID => {\n    try {\n      const response = await axios.put(\"http://localhost:4000/posts\", {\n        postID,\n        userID\n      });\n      setSavedPosts(response.data.savedPosts);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  const isPostSaved = id => savedPosts.includes(id);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mt-4\",\n      children: \"Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-unstyled\",\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"cardu\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body d-flex justify-content-between\\r\\nalign-items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"card-title\",\n              children: post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 1\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 1\n          }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => savePost(post._id),\n            className: `btn ${isPostSaved(post._id) ? \"btn-success\" : \"btn-primary\"}`,\n            disabled: isPostSaved(post._id),\n            children: isPostSaved(post._id) ? \"Saved\" : \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: post.imageUrl,\n            alt: post.title,\n            className: \"img-fluid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"instructions\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: post.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 1\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tags\",\n            children: post.tags.map((tag, index) => /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"ingredient-list\",\n              children: /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"card-text\",\n                children: [\"#\", tag]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 1\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 1\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 1\n        }, this)]\n      }, post._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 1\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 1\n  }, this);\n};\n_s(Home, \"Josd1wSZSWrvdURP6MC1G9m9t8I=\", false, function () {\n  return [useGetUserID, useCookies];\n});\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","useGetUserID","useCookies","axios","jsxDEV","_jsxDEV","Home","_s","posts","setPosts","savedPosts","setSavedPosts","userID","isLoggedIn","cookies","token","access_token","post","headers","then","response","window","sessionStorage","setItem","data","username","catch","error","fetchPosts","get","err","console","log","fetchSavedPosts","savePost","postID","put","isPostSaved","id","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","title","onClick","_id","disabled","src","imageUrl","alt","content","tags","tag","index","_c","$RefreshReg$"],"sources":["C:/Users/victo/Desktop/mern-community-app-copy/client/src/pages/home.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useGetUserID } from \"../hooks/useGetUserID\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport axios from \"axios\";\r\nexport const Home = () => {\r\nconst [posts, setPosts] = useState([]);\r\nconst [savedPosts, setSavedPosts] = useState([]);\r\nconst userID = useGetUserID();\r\nconst isLoggedIn = !!userID;\r\nconst [cookies] = useCookies(['access_token']);\r\nuseEffect(() => {\r\n    const token = cookies.access_token;\r\n    if (token && !isLoggedIn) {\r\n      axios.post('http://localhost:4000/auth/auto-login', {}, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      })\r\n      .then(response => {\r\n        // Handle successful login here\r\n        window.sessionStorage.setItem(\"userID\", response.data.userID);\r\n        window.sessionStorage.setItem(\"userName\", response.data.username);\r\n      })\r\n      .catch(error => {\r\n        // Handle login error here\r\n      });\r\n    }\r\nconst fetchPosts = async () => {\r\ntry {\r\nconst response = await axios.get(\"http://localhost:4000/posts\");\r\nsetPosts(response.data);\r\n} catch (err) {\r\nconsole.log(err);\r\n}\r\n};\r\n\r\nconst fetchSavedPosts = async () => {\r\ntry {\r\nconst response = await axios.get(\r\n`http://localhost:4000/posts/savedPosts/ids/${userID}`\r\n);\r\nsetSavedPosts(response.data.savedPosts);\r\n} catch (err) {\r\nconsole.log(err);\r\n}\r\n};\r\n\r\nfetchPosts();\r\nif (isLoggedIn) {\r\nfetchSavedPosts();\r\n} else {\r\nsetSavedPosts([]);\r\n}\r\n}, [userID, isLoggedIn,cookies]);\r\n\r\nconst savePost = async (postID) => {\r\ntry {\r\nconst response = await axios.put(\"http://localhost:4000/posts\", {\r\npostID,\r\nuserID,\r\n});\r\nsetSavedPosts(response.data.savedPosts);\r\n} catch (err) {\r\nconsole.log(err);\r\n}\r\n};\r\n\r\nconst isPostSaved = (id) => savedPosts.includes(id);\r\n\r\nreturn (\r\n<div className=\"home-container\">\r\n<h1 className=\"mt-4\">Posts</h1>\r\n<ul className=\"list-unstyled\">\r\n{posts.map((post) => (\r\n<li key={post._id} className=\"cardu\">\r\n<div className=\"card-body d-flex justify-content-between\r\nalign-items-center\">\r\n<div>\r\n<h2 className=\"card-title\">{post.title}</h2>\r\n</div>\r\n\r\n{isLoggedIn && (\r\n<button\r\nonClick={() => savePost(post._id)}\r\nclassName={`btn ${\r\nisPostSaved(post._id) ? \"btn-success\" : \"btn-primary\"\r\n}`}\r\ndisabled={isPostSaved(post._id)}\r\n>\r\n{isPostSaved(post._id) ? \"Saved\" : \"Save\"}\r\n</button>\r\n)}\r\n</div>\r\n<div className=\"card-body\">\r\n<img\r\nsrc={post.imageUrl}\r\nalt={post.title}\r\nclassName=\"img-fluid\"\r\n/>\r\n<div className=\"instructions\">\r\n<p className=\"card-text\">{post.content}</p>\r\n</div>\r\n<div className=\"tags\">\r\n{post.tags.map((tag, index) => (\r\n<ul key={index} className=\"ingredient-list\">\r\n<li className=\"card-text\">#{tag}</li>\r\n</ul>\r\n))}</div>\r\n</div>\r\n</li>\r\n))}\r\n</ul>\r\n</div>\r\n);\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}